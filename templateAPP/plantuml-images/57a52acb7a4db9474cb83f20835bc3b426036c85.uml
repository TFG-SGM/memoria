@startuml

Views ..> DataService

DataService ..> AuthRouter
DataService ..> AdminRouter
DataService ..> DoctorRouter
DataService ..> PatientRouter
DataService ..> TestRouter

AuthRouter ..> AuthController
AdminRouter ..> AdminController
DoctorRouter ..> DoctorController
PatientRouter ..> PatientController
TestRouter ..> TestController

AdminController ..> AdminModel
DoctorController ..> DoctorModel
PatientController ..> PatientModel
TestController ..> TestModel

class DataService {
        -void getToken()
    +data login(enail,password)
    +void logout()
    +data getData(endpoint)
    +data createData(endpoint,newData) 
    +data deleteData(endpoint) 
    +data updateData(endpoint,newData) 
    +data getUserData() 
}

class AuthRouter {
    void get("/auth/login")
    void post("/auth/user-data")
}

class AdminRouter {
    void get("/admin/")
    void post("/admin/")
    void get("/admin/:id")
    void put("/admin/:id")
    void delete("/admin/:id")
}

class DoctorRouter {
    void get("/doctor/")
    void post("/doctor/")
    void get("/doctor/:id")
    void put("/doctor/:id")
    void delete("/doctor/:id")
}

class PatientRouter {
    void get("/patient/")
    void post("/patient/")
    void get("/patient/:id")
    void put("/patient/:id")
    void delete("/patient/:id")
}

class TestRouter {
    void get("/test/")
    void post("/test/")
    void get("/test/:id")
    void put("/test/:id")
    void delete("/test/:id")
}


class AuthController {
    void validateEmail(email)
    void hasPassword(password)
    void getUserData(req,res)
    void login(req,res)
}

class AdminController {
    void getAll(req,res)
    void getById(req,res)
    void create(req,res)
    void update(req,res)
    void delete(req,res)
}

class DoctorController {
    void getAll(req,res)
    void getById(req,res)
    void create(req,res)
    void update(req,res)
    void delete(req,res)
}

class PatientController {
    void getAll(req,res)
    void getById(req,res)
    void create(req,res)
    void update(req,res)
    void delete(req,res)
}

class TestController {
    void getAll(req,res)
    void getById(req,res)
    void create(req,res)
    void update(req,res)
    void delete(req,res)
}

class AdminModel {
    admin[] getAll()
    admin getById()
    admin create()
    void update()
    void delete()
}

class DoctorModel {
    doctor[] getAll()
    doctor getById()
    doctor create()
    void update()
    void delete()
}

class PatientModel {
    patient[] getAll()
    patient getById()
    patient create()
    void update()
    void delete()
}

class TestModel {
    test[] getAll()
    test getById()
    patient create()
    void update()
    void delete()
}

@enduml